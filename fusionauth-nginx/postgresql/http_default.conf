### Global configurations to ensure a secure Nginx configuration is deployed.
# disable server tokens
server_tokens off;
# hide upstream proxy headers
proxy_hide_header X-Powered-By;
# Add security headers
add_header	X-Content-Type-Options "nosniff" always;
add_header	X-Frame-Options "SAMEORIGIN" always;
add_header	X-XSS-Protection "1; mode=block" always;
add_header	Referrer-Policy strict-origin-when-cross-origin;
# add_header	Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
# Enable strong TLS ciphers
ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
ssl_prefer_server_ciphers on;
# Enable TLS session caching
ssl_session_cache shared:SSL:50m;
ssl_session_timeout 5m;
# force all connections over TLS (uncomment if HTTPS is desired)
#add_header Strict-Transport-Security max-age=15768000;
# Other SSL-related settings
# SSL CERT (wildcard for all servers)
#ssl_certificate		/root/letsencrypt/live/example.com/fullchain.pem;
#ssl_certificate_key	/root/letsencrypt/live/example.com/privkey.pem;

## client certificate
#ssl_client_certificate	/etc/nginx/client_certs/certs.crt;
#ssl_verify_client optional;
# revocation list for client certs
#ssl_crl	/etc/nginx/client_certs/certs.pem;


upstream fusionauth {
	server fusionauth:9011;
}

server {
	listen 80;
	server_name fusionauth-nginx.example.com;
	proxy_set_header Host $host;
	proxy_set_header X-Forwarded-Host $host;
	proxy_set_header X-Forwarded-Proto "http";

	location / {
		proxy_pass      http://fusionauth;
	}
}
