name: Deploy
on:
  workflow_dispatch:
    inputs:
      command:
        type: choice
        options:
          - build    # build only
          - publish  # build & publish to dockerhub
        default: build
        description: Build only or Build And Publish to DockerHub
      version:
        type: string
        description: Version to build and tag the image with
        required: true
      latest:
        type: boolean
        description: Tag the image with latest
        default: true
      tag-suffix:
        type: string
        description: Tag suffix to append to the image tag
        default: ""

concurrency: docker-concurrency-group
jobs:
  multiarch-build:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build version tag
        run: |
          echo "FUSIONAUTH_TAGS=fusionauth/fusionauth-app:${{ inputs.version }}${{ inputs.tag-suffix }}" >> $GITHUB_ENV

      - name: Optional :latest tag
        if: inputs.latest == 'true'
        run: |
          echo "FUSIONAUTH_TAGS=${{ env.FUSIONAUTH_TAGS }},fusionauth/fusionauth-app:latest${{ env.FUSIONAUTH_TAG_SUFFIX }}" >> $GITHUB_ENV

      - name: Job summary
        run: |
          echo "Version: ${{ inputs.version }}"
          echo "Latest version: ${{ inputs.latest }}"
          echo "Tags: ${{ env.FUSIONAUTH_TAGS }}"

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./docker/fusionauth/fusionauth-app/Dockerfile
          build-args: FUSIONAUTH_VERSION=${{ inputs.version }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le,linux/s390x
          push: ${{ inputs.command == 'publish' }}
          tags: ${{ env.FUSIONAUTH_TAGS }}

